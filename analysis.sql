-- 1. Optimize Inventory Management

-- Calculate Total Overall Income
SELECT SUM("Revenue generated") AS Total_Revenue
FROM supply_chain_data;

-- Display products with the lowest availability level
SELECT "Product type", SKU, Availability
FROM supply_chain_data
ORDER BY Availability ASC
LIMIT 5;

-- Calculate the total value of inventory (stock) per SKU   
SELECT SKU, "Stock levels" * Price AS Inventory_Value
FROM supply_chain_data;

-- Calculate average stock levels and lead times for each SKU
SELECT SKU, AVG("Stock levels") AS avg_stock_levels, AVG("Lead times") AS avg_lead_times
FROM supply_chain_data
GROUP BY SKU;

-- Calculating the average lead time for each SKU and displaying the SKU with the highest lead time
WITH AvgLeadTimePerSKU AS (
    SELECT SKU, AVG("Lead times") AS AvgLeadTime
    FROM supply_chain_data
    GROUP BY SKU
)
SELECT s.SKU, s."Lead times" AS MaxLeadTime
FROM supply_chain_data s
JOIN AvgLeadTimePerSKU a ON s.SKU = a.SKU
WHERE s."Lead times" = a.AvgLeadTime;

-- 2. Demand Analysis

-- Calculate total revenue generated by each product type
SELECT "Product type", SUM("Revenue generated") AS total_revenue
FROM supply_chain_data
GROUP BY "Product type";

-- Analyze distribution of sales across different customer demographics for each product
SELECT SKU , "Customer demographics", SUM("Number of products sold") AS total_sales
FROM supply_chain_data
GROUP BY SKU, "Customer demographics";

-- Identify top-selling product and their corresponding sales volumes
SELECT SKU, SUM("Number of products sold") AS total_sales
FROM supply_chain_data
GROUP BY SKU
ORDER BY total_sales DESC

--3. Reduce Lead Time

-- Calculating the average lead time per supplier
SELECT "Supplier name", AVG("Lead times") AS Avg_Lead_Time
FROM supply_chain_data
GROUP BY "Supplier name";

-- Calculating the average lead time per shipping route
SELECT Routes, AVG("Lead times") AS AvgLeadTime
FROM supply_chain_data
GROUP BY Routes;

-- Displaying the fastest shipping time for each SKU
WITH FastestShippingTime AS (
    SELECT SKU, MIN("Shipping times") AS MinShippingTime
    FROM supply_chain_data
    GROUP BY SKU
)
SELECT s.SKU, s."Shipping times" AS FastestShippingTime
FROM supply_chain_data s
JOIN FastestShippingTime f ON s.SKU = f.SKU
WHERE s."Shipping times" = f.MinShippingTime;

-- 4. Minimize Transportation Costs

-- Displaying the average shipping cost per carrier
SELECT "Shipping carriers", AVG("Shipping costs") AS Avg_Shipping_Cost
FROM supply_chain_data
GROUP BY "Shipping carriers";

-- Calculating the total transportation cost per mode of transportation
SELECT "Transportation modes", SUM(Costs) AS Total_Transportation_Cost
FROM supply_chain_data
GROUP BY "Transportation modes";

-- Identifying the best transportation mode based on shipping costs and shipping time
SELECT "Transportation modes", "Shipping carriers", AVG("Shipping costs") AS AvgShippingCost, AVG("Shipping times") AS AvgShippingTime
FROM supply_chain_data
GROUP BY "Transportation modes", "Shipping carriers"
ORDER BY AvgShippingCost, AvgShippingTime;

-- Displaying the shipping route with the lowest cost
SELECT Routes, SUM(Costs) AS TotalCost
FROM supply_chain_data
GROUP BY Routes
ORDER BY TotalCost;

-- 5. Improve Product Quality

-- Calculating the average defect rate per SKU
SELECT SKU, AVG("Defect rates") AS Avg_Defect_Rate
FROM supply_chain_data
GROUP BY SKU;

-- Displaying the distribution of defect rates by SKU
SELECT SKU, PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY "Defect rates") AS MedianDefectRate,
       PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY "Defect rates") AS Q3DefectRate
FROM supply_chain_data
GROUP BY SKU;

-- Displaying the supplier(s) with the lowest defect rate
SELECT "Supplier name", AVG("Defect rates") AS AvgDefectRate
FROM supply_chain_data
GROUP BY "Supplier name"
ORDER BY AvgDefectRate;

-- 6. Enhance Supplier Relationships

-- Displaying the average production cost per SKU for each supplier
SELECT "Supplier name", SKU, AVG("Manufacturing costs") AS AvgManufacturingCost
FROM supply_chain_data
GROUP BY "Supplier name", SKU;

-- Calculating the total production per month for each supplier
SELECT "Supplier name", EXTRACT(MONTH FROM CURRENT_DATE) AS Month, SUM("Production volumes") AS TotalProduction
FROM supply_chain_data
GROUP BY "Supplier name", Month;

-- 7. Segment Customer Demographics

-- Displaying total revenue per customer demographic
SELECT "Customer demographics", SUM("Revenue generated") AS TotalRevenue
FROM supply_chain_data
GROUP BY "Customer demographics"
ORDER BY TotalRevenue DESC;

-- Calculating the number of products sold and identifying purchase trends based on customer demographics
SELECT "Customer demographics", EXTRACT(MONTH FROM CURRENT_DATE) AS Month, SUM("Number of products sold") AS TotalProductsSold
FROM supply_chain_data
GROUP BY "Customer demographics", Month;